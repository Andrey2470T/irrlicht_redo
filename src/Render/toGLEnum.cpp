#include "toGLEnum.h"

namespace render
{

toGLMinFilter[TMF_NEAREST] = GL_NEAREST;
toGLMinFilter[TMF_LINEAR] = GL_LINEAR;
toGLMinFilter[TMF_NEAREST_MIPMAP_NEAREST] = GL_NEAREST_MIPMAP_NEAREST;
toGLMinFilter[TMF_LINEAR_MIPMAP_NEAREST] = GL_LINEAR_MIPMAP_NEAREST;
toGLMinFilter[TMF_NEAREST_MIPMAP_LINEAR] = GL_NEAREST_MIPMAP_LINEAR;
toGLMinFilter[TMF_LINEAR_MIPMAP_LINEAR] = GL_LINEAR_MIPMAP_LINEAR;

toGLMagFilter[TMAGF_NEAREST] = GL_NEAREST;
toGLMagFilter[TMAGF_LINEAR] = GL_LINEAR;

toGLWrap[TW_REPEAT] = GL_REPEAT;
toGLWrap[TW_CLAMP_TO_EDGE] = GL_CLAMP_TO_EDGE;
toGLWrap[TW_CLAMP_TO_BORDER] = GL_CLAMP_TO_BORDER;
toGLWrap[TW_MIRRORED_REPEAT] = GL_MIRRORED_REPEAT;
toGLWrap[TW_MIRROR_CLAMP_TO_EDGE] = GL_MIRROR_CLAMP_TO_EDGE;

toGLBlendOp[BO_ADD] = GL_FUNC_ADD;
toGLBlendOp[BO_SUBTRACT] = GL_FUNC_SUBTRACT;

toGLBlendFunc[BF_ZERO] = GL_ZERO;
toGLBlendFunc[BF_ONE] = GL_ONE;
toGLBlendFunc[BF_SRC_COLOR] = GL_SRC_COLOR;
toGLBlendFunc[BF_ONE_MINUS_SRC_COLOR] = GL_ONE_MINUS_SRC_COLOR;
toGLBlendFunc[BF_DST_COLOR] = GL_DST_COLOR;
toGLBlendFunc[BF_ONE_MINUS_DST_COLOR] = GL_ONE_MINUS_DST_COLOR;
toGLBlendFunc[BF_SRC_ALPHA] = GL_SRC_ALPHA;
toGLBlendFunc[BF_ONE_MINUS_SRC_ALPHA] = GL_ONE_MINUS_SRC_ALPHA;
toGLBlendFunc[BF_DST_ALPHA] = GL_DST_ALPHA;
toGLBlendFunc[BF_ONE_MINUS_DST_ALPHA] = GL_ONE_MINUS_DST_ALPHA;

toGLPrimitiveType[PT_POINTS] = GL_POINTS;
toGLPrimitiveType[PT_LINE_STRIP] = GL_LINE_STRIP;
toGLPrimitiveType[PT_LINE_LOOP] = GL_LINE_LOOP;
toGLPrimitiveType[PT_LINES] = GL_LINES;
toGLPrimitiveType[PT_TRIANGLE_STRIP] = GL_TRIANGLE_STRIP;
toGLPrimitiveType[PT_TRIANGLE_FAN] = GL_TRIANGLE_FAN;
toGLPrimitiveType[PT_TRIANGLES] = GL_TRIANGLES;
toGLPrimitiveType[PT_POINT_SPRITES] = GL_POINTS;

toGLType[BasicType::UINT8] = GL_UNSIGNED_BYTE;
toGLType[BasicType::UINT16] = GL_UNSIGNED_SHORT;
toGLType[BasicType::UINT32] = GL_UNSIGNED_INT;
toGLType[BasicType::UINT64] = GL_UNSIGNED_INT;
toGLType[BasicType::CHAR] = GL_BYTE;
toGLType[BasicType::SHORT] = GL_SHORT;
toGLType[BasicType::INT] = GL_INT;
toGLType[BasicType::LONG_INT] = GL_INT;
toGLType[BasicType::FLOAT] = GL_FLOAT;
toGLType[BasicType::DOUBLE] = GL_DOUBLE;

toGLCompareFunc[CF_LESS] = GL_LESS;
toGLCompareFunc[CF_EQUAL] = GL_EQUAL;
toGLCompareFunc[CF_LEQUAL] = GL_LEQUAL;
toGLCompareFunc[CF_GREATER] = GL_GREATER;
toGLCompareFunc[CF_NOTEQUAL] = GL_NOTEQUAL;
toGLCompareFunc[CF_GEQUAL] = GL_GEQUAL;
toGLCompareFunc[CF_ALWAYS] = GL_ALWAYS;

toGLCullMode[CM_BACK] = GL_BACK;
toGLCullMode[CM_FRONT] = GL_FRONT;
toGLCullMode[CM_FRONT_AND_BACK] = GL_FRONT_AND_BACK;

toGLStencilOp[SO_KEEP] = GL_KEEP;
toGLStencilOp[SO_ZERO] = GL_ZERO;
toGLStencilOp[SO_REPLACE] = GL_REPLACE;
toGLStencilOp[SO_INVERT] = GL_INVERT;

}
